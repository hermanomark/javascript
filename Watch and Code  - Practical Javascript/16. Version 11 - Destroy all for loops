XVIII. Version 11 - Destroy all for loops

V11.
1. todoList.toggleAll should use forEach
2. view.displayTodos should use forEach

> todoList.toggleAll should use forEach
Version 1:
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    // Get number of completed todos.
    // for (var i = 0; i < totalTodos; i++) {
    //   if (this.todos[i].completed === true) {
    //     completedTodos++;
    //   }
    // }
    
    this.todos.forEach(function(todo) {
      if (todo.completed === true) {
         completedTodos++;
      }
    });   
    
    // Case 1: If everything’s true, make everything false.
    if (completedTodos === totalTodos) {
      // for (var i = 0; i < totalTodos; i++) {
      //   this.todos[i].completed = false;
      // }
      
      this.todos.forEach(function(todo) {
        todo.completed = false;
      });
      
    // Case 2: Otherwise, make everything true.
    } else {
      // for (var i = 0; i < totalTodos; i++) {
      //   this.todos[i].completed = true;
      // }
      this.todos.forEach(function(todo) {
        todo.completed = true;
      });
    }
  }
};

For advance Version 2:
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    // Get number of completed todos.
    // for (var i = 0; i < totalTodos; i++) {
    //   if (this.todos[i].completed === true) {
    //     completedTodos++;
    //   }
    // }
    
    this.todos.forEach(function(todo) {
      if (todo.completed === true) {
         completedTodos++;
      }
    });   
    
    // Case 1: If everything’s true, make everything false.
//     if (completedTodos === totalTodos) {
//       this.todos.forEach(function(todo) {
//         todo.completed = false;
//       });
      
//     // Case 2: Otherwise, make everything true.
//     } else {
//       this.todos.forEach(function(todo) {
//         todo.completed = true;
//       });
//     }

    this.todos.forEach(function(todo) {
      // Case 1: If everything's true, make everything false,
      if (completedTodos === totalTodos) {
        todo.completed = false;
      }
      // Case 2: Otherwise, make everything true.
      else {
        todo.completed = true;
      }
    });
  }
};

> view.displayTodos should use forEach
displayTodos: function() {
    var todosUl = document.querySelector('ul');
    todosUl.innerHTML = '';
//     for (var i = 0; i < todoList.todos.length; i++) {
//       var todoLi = document.createElement('li');
//       var todo = todoList.todos[i];
//       var todoTextWithCompletion = '';

//       if (todo.completed === true) {
//         todoTextWithCompletion = '(x) ' + todo.todoText;
//       } else {
//         todoTextWithCompletion = '( ) ' + todo.todoText;
//       }
      
//       todoLi.id = i;
//       todoLi.textContent = todoTextWithCompletion;
//       todoLi.appendChild(this.createDeleteButton());
//       todosUl.appendChild(todoLi);
//     }  
    
    todoList.todos.forEach(function(todo, position) { // callback funtions can pass the position not just the item in array
      var todoLi = document.createElement('li');
      var todoTextWithCompletion = '';

      if (todo.completed === true) {
        todoTextWithCompletion = '(x) ' + todo.todoText;
      } else {
        todoTextWithCompletion = '( ) ' + todo.todoText;
      }
      
      todoLi.id = position;
      todoLi.textContent = todoTextWithCompletion;
      todoLi.appendChild(this.createDeleteButton());
      todosUl.appendChild(todoLi);
    }, this); // explanation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach
    // inside forEach it's not referencing it to the object of view, so for that to make it happen you have to put 'this'
  }

Complete Code:
index.html: 
<!DOCTYPE html>
<html>
  <head>
    <title>Practical Todos</title>
    <link id="favicon" rel="icon" href="https://cdn.gomix.com/2bdfb3f8-05ef-4035-a06e-2043962a3a13%2Ffavicon.ico" type="image/x-icon">
  </head>
  <body>
    <h1>Todo List</h1>

    <div>
      <button onclick="handlers.toggleAll()">Toggle All</button>
    </div>
    
    <div>
      <button onclick="handlers.addTodo()">Add</button>
      <input id="addTodoTextInput" type="text">
    </div>
    
    <div>
      <button onclick="handlers.changeTodo()">Change Todo</button>
      <input id="changeTodoPositionInput" type="number">
      <input id="changeTodoTextInput" type="text">
    </div>
    
    <div>
      <button onclick="handlers.toggleCompleted()">Toggle Completed</button>
      <input id="toggleCompletedPositionInput" type="number">
    </div>
    
    <ul>
    </ul>
    <script src="/client.js"></script>
  </body>
</html>

script.js:
var todoList = {
  todos: [],
  addTodo: function(todoText) {
    this.todos.push({
      todoText: todoText,
      completed: false
    });
  },
  changeTodo: function(position, todoText) {
    this.todos[position].todoText = todoText;
  },
  deleteTodo: function(position) {
    this.todos.splice(position, 1);
  },
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
  },
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    this.todos.forEach(function(todo) {
      if (todo.completed === true) {
         completedTodos++;
      }
    });   
    
    this.todos.forEach(function(todo) {
      // Case 1: If everything's true, make everything false,
      if (completedTodos === totalTodos) {
        todo.completed = false;
      }
      // Case 2: Otherwise, make everything true.
      else {
        todo.completed = true;
      }
    });
  }
};

var handlers = {
  addTodo: function() {
    var addTodoTextInput = document.getElementById('addTodoTextInput');
    todoList.addTodo(addTodoTextInput.value);
    addTodoTextInput.value = '';
    view.displayTodos();
  },
  changeTodo: function() {
    var changeTodoPositionInput = document.getElementById('changeTodoPositionInput');
    var changeTodoTextInput = document.getElementById('changeTodoTextInput');
    todoList.changeTodo(changeTodoPositionInput.valueAsNumber, changeTodoTextInput.value);
    changeTodoPositionInput.value = '';
    changeTodoTextInput.value = '';
    view.displayTodos();
  },
  deleteTodo: function(position) {
    todoList.deleteTodo(position);
    view.displayTodos();
  },
  toggleCompleted: function() {
    var toggleCompletedPositionInput = document.getElementById('toggleCompletedPositionInput');
    todoList.toggleCompleted(toggleCompletedPositionInput.valueAsNumber);
    toggleCompletedPositionInput.value = '';
    view.displayTodos();
  },
  toggleAll: function() {
    todoList.toggleAll();
    view.displayTodos();
  }  
};

var view = {
  displayTodos: function() {
    var todosUl = document.querySelector('ul');
    todosUl.innerHTML = '';
    
    todoList.todos.forEach(function(todo, position) { 
      var todoLi = document.createElement('li');
      var todoTextWithCompletion = '';

      if (todo.completed === true) {
        todoTextWithCompletion = '(x) ' + todo.todoText;
      } else {
        todoTextWithCompletion = '( ) ' + todo.todoText;
      }
      
      todoLi.id = position;
      todoLi.textContent = todoTextWithCompletion;
      todoLi.appendChild(this.createDeleteButton());
      todosUl.appendChild(todoLi);
    }, this);
  },
  createDeleteButton: function() {
    var deleteButton = document.createElement('button');
    deleteButton.textContent = 'Delete';
    deleteButton.className = 'deleteButton'; // bunch of elements with the same class
    return deleteButton;
  },
  setUpEventListeners: function() {
    var todosUl = document.querySelector('ul');

    todosUl.addEventListener('click', function(event) {
      // Get the element that was clicked on.
      var elementClicked = event.target;

      // Check if elementClicked is a delete button.
      if (elementClicked.className === 'deleteButton') {
        handlers.deleteTodo(parseInt(elementClicked.parentNode.id));
      }
    });
  }
};

view.setUpEventListeners();