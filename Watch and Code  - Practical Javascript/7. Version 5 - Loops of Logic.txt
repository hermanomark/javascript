IX. Loops of Logic

The for loop:
i = 0               // initialization - make a variable to keep track of how many you wanna do something
Say "hey" if i < 3  // Condition - you have that kinda condition if this keep going if its not stop
Increase i by 1     // final-expression - this will happen after each round

0 "hey"
1 "hey"
2 "hey"
3 stop

for (initialization; condition; final-expression) {
  console.log('hey');
}

for (var i = 0; i < 3; i = i + 1 ) {
  console.log('hey');
}

// i = i + 1;
// i = i++;
// the same but increment is so common that we made a javascript code of i++

for (var i = 0; i < 3; i++ ) {
  console.log('hey');
}

=> hey
hey
hey

for (var i = 0; i <= 3; i++) {
  console.log(i);
}

=> 1
2
3

for (var i = 10; i >= 0; i--) {
  console.log(i);
}

=> 10
9
8
7
6
5
4
3
2
1
0

for (var i = 0; i <= 10; i = i + 2) {
  console.log(i);
}

=> 0
2
4
6
8
10

Looping over arrays:

for (var i = 0; i < 3; i++ ) {
  console.log('hey');
}

var testArray = ['item 1', 'item 2', 'item 3'];

testArray[0];
=> 'item 1'
testArray[1];
=> 'item 2'
testArray[2];
=> 'item 3'

var testArray = ['item 1', 'item 2', 'item 3'];

for (var i = 0; i < 3; i++ ) {
  console.log(testArray[i]);
}

=> item 1
item 2
item 3

var testArray = ['item 1', 'item 2', 'item 3'];

testArray.push('item 4');

for (var i = 0; i < 3; i++ ) {
  console.log(testArray[i]);
}

=> item 1
item 2
item 3 
// will not print the item 4 because the condition stops at 3

var testArray = ['item 1', 'item 2', 'item 3'];

testArray.push('item 4');

for (var i = 0; i < testArray.length; i++ ) {
  console.log(testArray[i]);
}

=> item 1
item 2
item 3
item 4 // prints now the item 4 because using .length it makes it dynamic


Requirements:
1. .displayTodos should show .todoText
2. .displayTodos should tell you if .todos is empty
3. .displayTodos should show .completed

var todoList = {
  todos: [],
  displayTodos: function() {
    // .displayTodos should tell you if .todos is empty
    if (this.todos.length === 0) {
      console.log('Your todo list is empty');
    }
    else {
      // .displayTodos should show .todoText
      console.log('My todos:');
      for (var i = 0; i < this.todos.length; i++) {
        console.log(this.todos[i].todoText);
        // .displayTodos should show .completed
        if (this.todos[i].completed === true) {
          console.log('(X)', this.todos[i].todoText);
        }
        else {
          console.log('( )', this.todos[i].todoText);
        }
      }
    }
  },
  addTodo: function(todoText) {
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },
  changeTodo: function(position, newValue) {
    this.todos[position].todoText = newValue;
    this.displayTodos();
  },
  deleteTodo: function(position) {
    this.todos.splice(position, 1);
    this.displayTodos();
  },
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  }
};

// .displayTodos should show .completed
(X) item 1
( ) item 2
( ) item 3

Use plunker to test the code